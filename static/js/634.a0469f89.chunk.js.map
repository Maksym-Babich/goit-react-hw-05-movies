{"version":3,"file":"static/js/634.a0469f89.chunk.js","mappings":"mTAEMA,EAAM,mCACNC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACCC,EADD,UACeF,EADf,wCACuDD,GADvD,SAEkBI,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,OAGCC,EAASD,EAASE,KAAKC,QAHxB,kBAIEF,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,kFACCP,EADD,UACeF,EADf,iCACgDD,EADhD,kBAC6DU,GAD7D,SAEkBN,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,OAGCC,EAASD,EAASE,KAAKC,QAHxB,kBAIEF,GAJF,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAwBC,GAAxB,kFACCT,EADD,UACeF,EADf,kBACiCW,EADjC,oBAC+CZ,GAD/C,SAEkBI,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,OAGCQ,EAAQR,EAASE,KAHlB,kBAIEM,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,kFACCT,EADD,UACeF,EADf,kBACiCW,EADjC,4BACuDZ,GADvD,SAEkBI,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,OAGCU,EAAOV,EAASE,KAAKQ,KAHtB,kBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BJ,GAA/B,kFACCT,EADD,UACeF,EADf,kBACiCW,EADjC,4BACuDZ,GADvD,SAEkBI,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,OAGCY,EAAUZ,EAASE,KAAKC,QAHzB,kBAIES,GAJF,kE,+HC9BMC,EAAOC,EAAAA,EAAAA,KAAH,8FAMJC,EAAQD,EAAAA,EAAAA,MAAH,uLAULE,EAASF,EAAAA,EAAAA,OAAH,6OAcNG,EAAOH,EAAAA,EAAAA,GAAH,iGAOJI,EAAWJ,EAAAA,EAAAA,GAAH,gEAIRK,GAAaL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,kDAIVO,EAAQP,EAAAA,EAAAA,IAAH,2DAKLQ,EAAOR,EAAAA,EAAAA,KAAH,wC,uCCvCF,SAASS,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOrB,EAAP,KAAgBsB,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAM1B,EAAQwB,EAAaG,IAAI,SAC3B3B,IACFD,EAAAA,EAAAA,IAAaC,GAAO4B,MAAK,SAAAhC,GACvBwB,EAAWxB,EACZ,GAEJ,GAAE,CAAC4B,KAWF,iCACE,UAAChB,EAAD,CAAMqB,SAVV,SAAsBC,GACpBA,EAAEC,iBAEY,KADAD,EAAEE,OAAOhC,MAAMiC,OAE3BR,EAAgB,CAAEzB,MAAO8B,EAAEE,OAAOhC,MAAMiC,OAE3C,EAIG,WACE,SAACvB,EAAD,CAAOwB,KAAK,QAAQC,aAAa,SACjC,SAACxB,EAAD,CAAQyB,KAAK,SAAb,wBAEF,SAACxB,EAAD,UACId,EAAQuC,OAENvC,EAAQwC,KAAI,SAAAnC,GACV,OACE,SAACU,EAAD,WACE,UAACC,EAAD,CACEyB,GAAE,0CAAqCpC,EAAMD,IAC7CsC,MAAO,CAAEC,KAAMpB,GAFjB,WAIE,SAACL,EAAD,CACE0B,IAAKvC,EAAMwC,MACXC,IACEzC,EAAM0C,YAAN,6CAC0C1C,EAAM0C,aAC5C,4FAGR,SAAC5B,EAAD,UAAOd,EAAMwC,YAbFxC,EAAMD,GAiBxB,IApBD,SAwBX,C","sources":["api.js","components/Movies/Movies.styled.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '4c46ffde27c0a95d0cf12a8147e7b935';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function getTrending() {\n  const endpoint = `${BASE_URL}/trending/movie/week?api_key=${KEY}`;\n  const response = await axios.get(endpoint);\n  const movies = response.data.results;\n  return movies;\n}\n\nexport async function searchMovies(query) {\n  const endpoint = `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`;\n  const response = await axios.get(endpoint);\n  const movies = response.data.results;\n  return movies;\n}\n\nexport async function getMovie(id) {\n  const endpoint = `${BASE_URL}/movie/${id}?api_key=${KEY}`;\n  const response = await axios.get(endpoint);\n  const movie = response.data;\n  return movie;\n}\n\nexport async function getMovieCast(id) {\n  const endpoint = `${BASE_URL}/movie/${id}/credits?api_key=${KEY}`;\n  const response = await axios.get(endpoint);\n  const cast = response.data.cast;\n  return cast;\n}\n\nexport async function getMovieReviews(id) {\n  const endpoint = `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`;\n  const response = await axios.get(endpoint);\n  const reviews = response.data.results;\n  return reviews;\n}\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Form = styled.form`\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Input = styled.input`\n  margin-right: 30px;\n  width: 250px;\n  border: 1px solid #fff;\n  border-radius: 10px;\n  padding: 10px;\n  background-color: transparent;\n  color: #fff;\n`;\n\nexport const Button = styled.button`\n  border: 1px solid #fff;\n  border-radius: 10px;\n  color: #fff;\n  font-size: 15px;\n  font-weight: 700;\n  background-color: transparent;\n  cursor: pointer;\n\n  :hover {\n    background-color: #1632af;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nexport const ListItem = styled.li`\n  flex-basis: calc((100% - 75px) / 5);\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  display: block;\n`;\n\nexport const Span = styled.span`\n  color: #fff;\n`;\n","import {\n  Form,\n  Input,\n  Button,\n  List,\n  ListItem,\n  StyledLink,\n  Image,\n  Span,\n} from 'components/Movies/Movies.styled';\nimport { useState, useEffect } from 'react';\nimport { searchMovies } from 'api';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [results, setResults] = useState([]);\n  const location = useLocation();\n  const [searchparams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchparams.get('query');\n    if (query) {\n      searchMovies(query).then(movies => {\n        setResults(movies);\n      });\n    }\n  }, [searchparams]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const query = e.target.query.value;\n    if (query !== '') {\n      setSearchParams({ query: e.target.query.value });\n    }\n  }\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input name=\"query\" autoComplete=\"off\" />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      <List>\n        {!results.length\n          ? null\n          : results.map(movie => {\n              return (\n                <ListItem key={movie.id}>\n                  <StyledLink\n                    to={`/goit-react-hw-05-movies/movies/${movie.id}`}\n                    state={{ from: location }}\n                  >\n                    <Image\n                      alt={movie.title}\n                      src={\n                        movie.poster_path\n                          ? `https://image.tmdb.org/t/p/original${movie.poster_path}`\n                          : 'https://artsmidnorthcoast.com/wp-content/uploads/2014/05/no-image-available-icon-6.png'\n                      }\n                    />\n                    <Span>{movie.title}</Span>\n                  </StyledLink>\n                </ListItem>\n              );\n            })}\n      </List>\n    </>\n  );\n}\n"],"names":["KEY","BASE_URL","getTrending","endpoint","axios","response","movies","data","results","searchMovies","query","getMovie","id","movie","getMovieCast","cast","getMovieReviews","reviews","Form","styled","Input","Button","List","ListItem","StyledLink","Link","Image","Span","Movies","useState","setResults","location","useLocation","useSearchParams","searchparams","setSearchParams","useEffect","get","then","onSubmit","e","preventDefault","target","value","name","autoComplete","type","length","map","to","state","from","alt","title","src","poster_path"],"sourceRoot":""}